fig
dev.off()
orca(fig, "FINAL_plot.pdf")
fig <- plot_ly(y = list(1,2,3,4,5), type = "box", quartilemethod="linear", name="Linear Quartile Mode")
fig <- fig %>% add_trace(y = list(1,2,3,4,5), quartilemethod="inclusive", name="Inclusive Quartile Mode")
fig <- fig %>% add_trace(y = list(1,2,3,4,5), quartilemethod="exclusive", name="Exclusive Quartile Mode")
fig <- fig %>% layout(title = "Modifying The Algorithm For Computing Quartiles")
fig
fig <- plot_ly(y = list(1,2,3,4,5), type = "box", quartilemethod="linear", name="Linear Quartile Mode")
fig <- fig %>% add_trace(y = list(1,2,3,4,5), quartilemethod="inclusive", name="Inclusive Quartile Mode")
fig <- fig %>% add_trace(y = list(1,2,3,4,5), quartilemethod="exclusive", name="Exclusive Quartile Mode")
fig <- fig %>% layout(autosize = F, width = 1440, height = 400, margin = m)
fig
orca(fig, "FINAL_plot.pdf")
kaleido(fig, "FINAL_plot.pdf")
install.packages('kaleido')
install.packages('reticulate')
library(reticulate)
kaleido(fig, "FINAL_plot.pdf")
4
4
4
fig <- plot_ly(y = list(1,2,3,4,5), type = "box", quartilemethod="linear", name="Linear Quartile Mode")
fig <- fig %>% add_trace(y = list(1,2,3,4,5), quartilemethod="inclusive", name="Inclusive Quartile Mode")
fig <- fig %>% add_trace(y = list(1,2,3,4,5), quartilemethod="exclusive", name="Exclusive Quartile Mode")
fig <- fig %>% layout(autosize = F, width = 1440, height = 400, margin = m)
fig <- fig %>% layout(autosize = F, width = 1440, height = 400)
kaleido(fig, "FINAL_plot.pdf")
reticulate::install_miniconda()
reticulate::conda_install('r-reticulate', 'python-kaleido')
reticulate::conda_install('r-reticulate', 'plotly', channel = 'plotly')
reticulate::use_miniconda('r-reticulate')
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))
# Loading Packages ------
library(tidyverse)
library(here)
library(skimr)
library(janitor)
library(car)
library(moments)
library(ggplot2)
library(tikzDevice)
library(showtext)
library(gridExtra)
library(ggpattern)
# Read CSV ------
df <- read_csv2('data/Auswertunggesamt.csv') %>%
clean_names() %>%
mutate(gruppe = as.factor(gruppe),
tag = as.factor(tag),
qualitat = as.factor(qualitat),
szene = str_remove(szene, "SA"),
szene= as.factor(szene),
verkehrsaufkommen = as.factor(verkehrsaufkommen),
proband = as.factor(proband),
altergruppe = as.factor(altersgruppe),
km_y = as.factor(km_y)) %>%
na.omit()
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))
grid.arrange(bp7,ncol = 1)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',width=boxplot_boxWidth,pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
boxplotTheme
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp7,ncol = 1)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',width=boxplot_boxWidth,pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
boxplotTheme
#  Themes ----
##  Boxplottheme ----
boxplotTheme <- theme_light()+
theme(axis.line = element_line(size = 0.25),
panel.grid.major = element_line(size = 0.25),
panel.grid.minor = element_line(size = 0.25))+
theme(legend.title = element_blank(),legend.position = "bottom", legend.direction = "horizontal",
legend.key.width = unit(0.4, "cm"),
legend.key.height = unit(0.4, "cm"),
axis.text.x= element_text( colour="#000000", size=10),
axis.text.y= element_text( colour="#000000"),
legend.text = element_text(size=10)) # adjust legend key size
boxplot_colorPalette <- c("#3070B3", "#F7B11E", "#9FBA36", "#075507")
boxplot_boxWidth = 0.5
boxplot_patternSpacing = 0.04
boxplot_patternDensity = 0.06
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',width=boxplot_boxWidth,pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
boxplotTheme
##  Trendline ----
trendline <- geom_smooth(method=lm,se=FALSE, color="black", aes(group=1))
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',width=boxplot_boxWidth,pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
boxplotTheme
grid.arrange(bp7,ncol = 1)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
boxplotTheme
grid.arrange(bp7,ncol = 1)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp7,ncol = 1)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)  +
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette)
grid.arrange(bp7,ncol = 1)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)  +
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)
grid.arrange(bp7,ncol = 1)
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)  +
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)
grid.arrange(bp7,ncol = 1)
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)  +
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)
grid.arrange(bp7,ncol = 1)
dev.off() # export file and exit tikzDevice functio
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)  +
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)
grid.arrange(bp7,ncol = 1)
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp7,ncol = 1)
dev.off() # export file and exit tikzDevice functio
# Plotting ----
stikz <- function(name,wi,hi){
new_name <- gsub(" ","",paste(name,'.tex'))
tikz(new_name, width = wi,height = hi,pointsize = 12) #define plot name size and font size
}
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp7,ncol = 1)
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp7 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp7,ncol = 1)
dev.off() # export file and exit tikzDevice functio
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
# Loading Packages ------
library(tidyverse)
library(here)
library(skimr)
library(janitor)
library(car)
library(moments)
library(ggplot2)
library(tikzDevice)
library(showtext)
library(gridExtra)
library(ggpattern)
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = vt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
View(df)
str(df)
# Read CSV ------
df <- read_csv2('data/Auswertunggesamt.csv') %>%
clean_names() %>%
mutate(gruppe = as.factor(gruppe),
tag = as.factor(tag),
sa_gesamt = as.numeric(sa_gesamt),
qualitat = as.factor(qualitat),
szene = str_remove(szene, "SA"),
szene= as.factor(szene),
verkehrsaufkommen = as.factor(verkehrsaufkommen),
proband = as.factor(proband),
altergruppe = as.factor(altersgruppe),
km_y = as.factor(km_y)) %>%
na.omit()
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = vt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
bp8 <- ggplot(df, aes(x = szene, y = vt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = vt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
theme(legend.title = blank_element())
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = vt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
boxplotTheme
grid.arrange(bp8,ncol = 1)
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = vt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")+
boxplotTheme
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
#  Themes ----
##  Boxplottheme ----
boxplotTheme <- theme(axis.line = element_line(size = 0.25),
panel.grid.major = element_line(size = 0.25),
panel.grid.minor = element_line(size = 0.25))+
theme(legend.title = element_blank(),legend.position = "bottom", legend.direction = "horizontal",
legend.key.width = unit(0.4, "cm"),
legend.key.height = unit(0.4, "cm"),
axis.text.x= element_text( colour="#000000"),
axis.text.y= element_text( colour="#000000"),
legend.text = element_text(size=10)) # adjust legend key size
#  Themes ----
##  Boxplottheme ----
boxplotTheme <- theme(axis.line = element_line(linewidth = 0.25),
panel.grid.major = element_line(linewidth = 0.25),
panel.grid.minor = element_line(linewidth = 0.25))+
theme(legend.title = element_blank(),legend.position = "bottom", legend.direction = "horizontal",
legend.key.width = unit(0.4, "cm"),
legend.key.height = unit(0.4, "cm"),
axis.text.x= element_text( colour="#000000"),
axis.text.y= element_text( colour="#000000"),
legend.text = element_text(size=10)) # adjust legend key size
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = vt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt")
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
boxplotTheme_standard <- theme(axis.line = element_line(linewidth = 0.0),
panel.grid.major = element_line(linewidth = 0.25),
panel.grid.minor = element_line(linewidth = 0.25))+
theme(legend.title = element_blank(),legend.position = "bottom", legend.direction = "horizontal",
legend.key.width = unit(0.4, "cm"),
legend.key.height = unit(0.4, "cm"),
axis.text.x= element_text( colour="#000000"),
axis.text.y= element_text( colour="#000000"),
legend.text = element_text(size=10)) # adjust legend key size
boxplotTheme <- boxplotTheme_standard
## Create boxplots ----
### SA_gesamt ~ Szene,Fill: Aufkommen ----
stikz("test1",5.66,3.2)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme
grid.arrange(bp8,ncol = 1)
dev.off() # export file and exit tikzDevice functio
legendAtBottom <- theme(legend.position = "bottom", legend.direction = "horizontal")
legendNotTitle <- theme(legend.title = element_blank())
boxplotTheme_standard <- theme(axis.line = element_line(linewidth = 0.0),
panel.grid.major = element_line(linewidth = 0.25),
panel.grid.minor = element_line(linewidth = 0.25))+
theme(legend.key.width = unit(0.4, "cm"),
legend.key.height = unit(0.4, "cm"),
axis.text.x= element_text( colour="#000000"),
axis.text.y= element_text( colour="#000000"),
legend.text = element_text(size=10)) # adjust legend key size
#  Themes ----
##  Boxplottheme ----
boxplotTheme_light <- theme_light()+theme(axis.line = element_line(linewidth = 0.25),
panel.grid.major = element_line(linewidth = 0.25),
panel.grid.minor = element_line(linewidth = 0.25))+
theme(legend.key.width = unit(0.4, "cm"),
legend.key.height = unit(0.4, "cm"),
axis.text.x= element_text( colour="#000000"),
axis.text.y= element_text( colour="#000000"),
legend.text = element_text(size=10)) # adjust legend key size
legendAtBottom <- theme(legend.position = "bottom", legend.direction = "horizontal")
legendNotTitle <- theme(legend.title = element_blank())
boxplotTheme <- boxplotTheme_standard
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'Verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom+theme(legen.title="test")
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom+theme(legend.title="test")
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom+ guides(fill=guide_legend(title="New Legend Title"))
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom+scale_fill_discrete(name = "New Legend Title")
grid.arrange(bp8,ncol = 1)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom
bp8$labels$fill <- "New Legend Title"
grid.arrange(bp8,ncol = 1)
View(bp8)
<
<
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom
bp8$labels$pattern <- "New Legend Title"
grid.arrange(bp8,ncol = 1)
View(bp8)
View(bp8)
bp8 <- ggplot(df, aes(x = szene, y = sa_gesamt, fill = verkehrsaufkommen))+
stat_boxplot(geom = 'errorbar',size=0.2) +
geom_boxplot(size=0.2)+
scale_fill_manual(name = 'verkehrsaufkommen', values = boxplot_colorPalette) +
geom_boxplot_pattern(aes( pattern = verkehrsaufkommen),pattern_color='black', pattern_fill='black',pattern_spacing = boxplot_patternSpacing,pattern_density = boxplot_patternDensity)+
trendline+
labs(x = "Szene", y = "SA gesamt") +
boxplotTheme+
legendAtBottom
bp8$labels$pattern <- "New Legend Title"
bp8$labels$fill <- "New Legend Title"
grid.arrange(bp8,ncol = 1)
